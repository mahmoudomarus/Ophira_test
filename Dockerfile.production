# Production Dockerfile - Creates lean deployment image
# Multi-stage build: Development vs Production

# Stage 1: Development dependencies (for building)
FROM python:3.10-slim as development
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Stage 2: Production runtime (lean)
FROM python:3.10-slim as production

# Install only runtime system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy only production requirements
COPY requirements.production.txt .
RUN pip install --no-cache-dir -r requirements.production.txt

# Copy application code
COPY ophira/ ./ophira/
COPY web_interface.py .
COPY static/ ./static/

# Copy frontend build (not source)
COPY --from=frontend-build /app/frontend/.next/standalone ./frontend/
COPY --from=frontend-build /app/frontend/.next/static ./frontend/.next/static/
COPY --from=frontend-build /app/frontend/public ./frontend/public/

# Create non-root user
RUN useradd -m -u 1000 ophira && chown -R ophira:ophira /app
USER ophira

EXPOSE 8001
CMD ["python", "-m", "uvicorn", "web_interface:app", "--host", "0.0.0.0", "--port", "8001"]

# Final size: ~500MB instead of 12GB 