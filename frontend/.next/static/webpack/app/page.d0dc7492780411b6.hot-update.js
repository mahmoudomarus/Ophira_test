"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/stores/sessionStore.ts":
/*!************************************!*\
  !*** ./src/stores/sessionStore.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSessionStore: function() { return /* binding */ useSessionStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var _lib_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/api */ \"(app-pages-browser)/./src/lib/api.ts\");\n\n\n\nconst useSessionStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.devtools)((set, get)=>({\n        // Initial state\n        sessionInfo: null,\n        isAuthenticated: false,\n        isLoading: false,\n        isInitializing: false,\n        error: null,\n        warnings: [],\n        lastActivity: null,\n        // Initialize session (for auto-login)\n        initializeSession: async ()=>{\n            const currentState = get();\n            // Prevent multiple concurrent initializations\n            if (currentState.isInitializing || currentState.isAuthenticated) {\n                return;\n            }\n            set({\n                isLoading: true,\n                isInitializing: true,\n                error: null\n            });\n            try {\n                var _navigator, _navigator1;\n                // Try to create a demo session\n                await get().login(\"demo_user\", {\n                    platform: ((_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.platform) || \"unknown\",\n                    userAgent: ((_navigator1 = navigator) === null || _navigator1 === void 0 ? void 0 : _navigator1.userAgent) || \"unknown\"\n                });\n            } catch (error) {\n                console.error(\"Failed to initialize session:\", error);\n                set({\n                    error: error instanceof Error ? error.message : \"Failed to initialize session\",\n                    isLoading: false,\n                    isInitializing: false\n                });\n            } finally{\n                set({\n                    isInitializing: false\n                });\n            }\n        },\n        // Login with username and device info\n        login: async (username, deviceInfo)=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__.ophiraApi.login(username, deviceInfo);\n                if (response.success && response.data) {\n                    set({\n                        sessionInfo: response.data,\n                        isAuthenticated: true,\n                        isLoading: false,\n                        warnings: response.data.warnings || [],\n                        lastActivity: new Date(),\n                        error: null\n                    });\n                } else {\n                    throw new Error(response.error || \"Login failed\");\n                }\n            } catch (error) {\n                console.error(\"Login failed:\", error);\n                set({\n                    error: error instanceof Error ? error.message : \"Login failed\",\n                    isLoading: false,\n                    isAuthenticated: false,\n                    sessionInfo: null\n                });\n                throw error;\n            }\n        },\n        // Logout and clear session\n        logout: async ()=>{\n            const { sessionInfo } = get();\n            if (sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_id) {\n                try {\n                    await _lib_api__WEBPACK_IMPORTED_MODULE_0__.ophiraApi.logout(sessionInfo.session_id);\n                } catch (error) {\n                    console.error(\"Logout request failed:\", error);\n                }\n            }\n            set({\n                sessionInfo: null,\n                isAuthenticated: false,\n                warnings: [],\n                lastActivity: null,\n                error: null\n            });\n        },\n        // Refresh current session\n        refreshSession: async ()=>{\n            const { sessionInfo } = get();\n            if (!(sessionInfo === null || sessionInfo === void 0 ? void 0 : sessionInfo.session_id)) {\n                set({\n                    error: \"No active session to refresh\"\n                });\n                return;\n            }\n            try {\n                const response = await _lib_api__WEBPACK_IMPORTED_MODULE_0__.ophiraApi.refreshSession(sessionInfo.session_id);\n                if (response.success && response.data) {\n                    set({\n                        sessionInfo: response.data,\n                        warnings: response.data.warnings || [],\n                        lastActivity: new Date(),\n                        error: null\n                    });\n                } else {\n                    throw new Error(response.error || \"Session refresh failed\");\n                }\n            } catch (error) {\n                console.error(\"Session refresh failed:\", error);\n                set({\n                    error: error instanceof Error ? error.message : \"Session refresh failed\"\n                });\n                // If refresh fails, try to re-authenticate\n                await get().logout();\n            }\n        },\n        // Update last activity timestamp\n        updateLastActivity: ()=>{\n            set({\n                lastActivity: new Date()\n            });\n        },\n        // Clear error state\n        clearError: ()=>{\n            set({\n                error: null\n            });\n        },\n        // Acknowledge a warning\n        acknowledgeWarning: (warningId)=>{\n            set((state)=>({\n                    warnings: state.warnings.filter((w)=>w.type !== warningId)\n                }));\n        }\n    }), {\n    name: \"ophira-session-store\",\n    partialize: (state)=>({\n            sessionInfo: state.sessionInfo,\n            isAuthenticated: state.isAuthenticated,\n            lastActivity: state.lastActivity\n        })\n}));\n// Auto-refresh session every 5 minutes\nif (true) {\n    setInterval(()=>{\n        const store = useSessionStore.getState();\n        if (store.isAuthenticated && store.sessionInfo) {\n            store.refreshSession().catch(console.error);\n        }\n    }, 5 * 60 * 1000);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/stores/sessionStore.ts\n"));

/***/ })

});